---
import BaseLayout from '../../../layouts/FBLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    
  const allPostsBlog =  await getCollection('festung_breslau_blog');
  const allPostsArticle =  await getCollection('festung_breslau_article');
  const allPosts = allPostsBlog.concat(allPostsArticle)

  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags.split(',').map(s => s.trim())).flat())];

  return uniqueTags.map((tag) => {
    const filteredBlogPosts = allPostsBlog.filter((post) => post.data.tags.split(',').map(s => s.trim()).includes(tag));
    const filteredArticlePosts = allPostsArticle.filter((post) => post.data.tags.split(',').map(s => s.trim()).includes(tag));
    return {
      params: { tag },
      props: { blogposts: filteredBlogPosts, articleposts: filteredArticlePosts },
    };
  });
}

const { tag } = Astro.params;
const { blogposts } = Astro.props;
const { articleposts } = Astro.props;

const filteredBlogPosts = blogposts.filter((post) => post.data.tags?.includes(tag));
const filteredArticlePosts = articleposts.filter((post) => post.data.tags?.includes(tag));
---

<BaseLayout title={tag}>
  <h2>Tag: {tag}.</h2>

  <p><a href="/festung-breslau/tags">Lista tagów</a></p>
  
  <h3>Posty z tagiem: <span class="tag">{tag}</span></h3>
  <ul>
    {filteredBlogPosts.map((post) => <li><a href={`/festung-breslau/blog/${post.slug}`}>{post.data.date1945.replace(/\ 1945/g,"")} - "{post.data.title}"</a></li>)}
  </ul>
  <hr />
  <h3>Artykuły z tagiem: <span class="tag">{tag}</span></h3>
  <ul>
    {filteredArticlePosts.map((post) => <li><a href={`/festung-breslau/article/${post.slug}`}>{post.data.title}</a></li>)}
  </ul>
</BaseLayout>